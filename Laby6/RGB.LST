Microsoft (R) Macro Assembler Version 5.00                  1/4/24 22:16:29
                                                             Page     1-1


       1				; Program gwiazdki.asm 
       2				; Wyœwietlanie znaków * w takt przerwañ
					 zegarowych 
       3				; Uruchomienie w trybie rzeczywistym pr
					ocesora x86 
       4				; lub na maszynie wirtualnej 
       5				; zakoñczenie programu po naciœniêciu k
					lawisza 'x' 
       6				; asemblacja (MASM 4.0): masm gwiazdki.
					asm,,,; 
       7				; konsolidacja (LINK 3.60): link gwiazd
					ki.obj; 
       8				 
       9				.386 
      10 0000				rozkazy SEGMENT use16 
      11				ASSUME CS:rozkazy 
      12				 
      13				; 
      14				; 
      15				 
      16				;======================================
					====================== 
      17				; procedura obs³ugi przerwania zegarowe
					go 
      18 0000				obsluga_zegara PROC 
      19								
									
									; przec
					howanie u¿ywanych rejestrów 
      20 0000  50						push ax 
      21 0001  53						push bx 
      22 0002  06						push es 
      23				 
      24							; 
      25 0003  2E: 66| FF 0E 007F R				dec dword ptr c
					s:czas_oczekiwania  
      26 0009  0F 85 0071 R					jnz skip 
      27 000D  2E: 66| C7 06 007F R				mov	dword p
					tr cs:czas_oczekiwania, 18 
      28       00000012			
      29				 
      30 0017  BB 0000						mov	bx, 0 
      31				 
      32 001A  2E: A0 0084 R					mov	al, cs:
					kolor_czer 
      33 001E  2E: 38 06 0083 R					cmp	cs:kolo
					r, al 
      34 0023  0F 85 0032 R					jne	nie_cze
					rw 
      35 0027  2E: A0 0085 R					mov	al, cs:
					kolor_ziel 
      36 002B  2E: A2 0083 R					mov cs:kolor, a
					l 
      37 002F  EB 21 90						jmp	dal 
Microsoft (R) Macro Assembler Version 5.00                  1/4/24 22:16:29
                                                             Page     1-2


      38 0032				nie_czerw: 
      39 0032  2E: A0 0085 R					mov	al, cs:
					kolor_ziel 
      40 0036  2E: 38 06 0083 R					cmp	cs:kolo
					r, al 
      41 003B  0F 85 004A R					jne	nie_zie
					l 
      42 003F  2E: A0 0086 R					mov	al, cs:
					kolor_nieb 
      43 0043  2E: A2 0083 R					mov cs:kolor, a
					l 
      44 0047  EB 09 90						jmp	dal 
      45 004A				nie_ziel: 
      46 004A  2E: A0 0084 R					mov	al, cs:
					kolor_czer 
      47 004E  2E: A2 0083 R					mov cs:kolor, a
					l 
      48 0052				dal: 
      49				; 
      50								
									
									; wpisa
					nie adresu pamiêci ekranu do rejestru E
					S - pamiêæ 
      51								
									
									; ekran
					u dla trybu tekstowego zaczyna siê od a
					dresu B8000H, 
      52								
									
									; jedna
					k do rejestru ES wpisujemy wartoœæ B800
					H, 
      53								
									
									; bo w 
					trakcie obliczenia adresu procesor ka¿d
					orazowo mno¿y 
      54								
									
									; zawar
					toœæ rejestru ES przez 16 
      55 0052  B8 B800						mov ax, 0B800h
									
							;adres pamiêci ekranu 
      56 0055  8E C0						mov es, ax 
      57								
									
									; zmien
					na 'licznik' zawiera adres bie¿¹cy w pa
					miêci ekranu 
      58 0057  2E: 8B 1E 0079 R					mov bx, cs:licz
					nik 
Microsoft (R) Macro Assembler Version 5.00                  1/4/24 22:16:29
                                                             Page     1-3


      59 005C  2E: A0 0083 R					mov	al, cs:
					kolor 
      60 0060				rysuj: 
      61								
									
									; przes
					³anie do pamiêci ekranu kodu ASCII wyœw
					ietlanego znaku 
      62								
									
									; i kod
					u koloru: bia³y na czarnym tle (do nast
					êpnego bajtu) 
      63 0060  26: C6 07 2A					mov byte PTR es
					:[bx], '*'			; kod A
					SCII 
      64 0064  26: 88 47 01					mov byte PTR es
					:[bx+1], al			; kolor
					 
      65								
									
									; zwiêk
					szenie o 2 adresu bie¿¹cego w pamiêci e
					kranu 
      66					 
      67 0068  83 C3 02						add bx, 2 
      68 006B  81 FB 0960					cmp bx, 2400 
      69 006F  72 EF						jb	rysuj 
      70				 
      71								
								 
      72							 
      73 0071				skip: 
      74 0071  07						pop es 
      75 0072  5B						pop bx 
      76 0073  58						pop ax 
      77								
									
									; skok 
					do oryginalnej procedury obs³ugi przerw
					ania zegarowego 
      78 0074  2E: FF 2E 007B R					jmp dword PTR c
					s:wektor8 
      79								
									
									; dane 
					programu ze wzglêdu na specyfikê obs³ug
					i przerwañ 
      80								
									
									; umies
					zczone s¹ w segmencie kodu 
      81 0079  0140						licznik dw 320
									
Microsoft (R) Macro Assembler Version 5.00                  1/4/24 22:16:29
                                                             Page     1-4


							; wyœwietlanie pocz¹wsz
					y od 2. wiersza 
      82 007B  ????????						wektor8 dd ? 
      83 007F  12000000						czas_oczekiwani
					a dd 18 
      84 0083  ??						kolor	
						db ? 
      85 0084  48						kolor_czer
						db 01001000b 
      86 0085  28						kolor_ziel
						db 00101000b 
      87 0086  18						kolor_nieb
						db 00011000b 
      88 0087				obsluga_zegara ENDP 
      89				 
      90				;======================================
					====================== 
      91				; program g³ówny - instalacja i deinsta
					lacja procedury 
      92				; obs³ugi przerwañ 
      93				; ustalenie strony nr 0 dla trybu tekst
					owego 
      94				 
      95 0087				zacznij: 
      96 0087  B0 00						mov al, 0 
      97 0089  B4 05						mov ah, 5 
      98 008B  CD 0A						int 10 
      99 008D  B8 0000						mov ax, 0 
     100 0090  8E D8						mov ds,ax
									
								; zerowanie rej
					estru DS 
     101								
									
									; odczy
					tanie zawartoœci wektora nr 8 i zapisan
					ie go 
     102								
									
									; w zmi
					ennej 'wektor8' (wektor nr 8 zajmuje w 
					pamiêci 4 bajty 
     103								
									
									; pocz¹
					wszy od adresu fizycznego 8 * 4 = 32) 
     104 0092  66| A1 0020					mov eax,ds:[32]
									
							; adres fizyczny 0*16 +
					 32 = 32 
     105 0096  2E: 66| A3 007B R				mov cs:wektor8,
					 eax 
     106				 
     107								
Microsoft (R) Macro Assembler Version 5.00                  1/4/24 22:16:29
                                                             Page     1-5


									
									; wpisa
					nie do wektora nr 8 adresu procedury 'o
					bsluga_zegara' 
     108 009B  B8 ---- R					mov ax, SEG obs
					luga_zegara			; czêœæ
					 segmentowa adresu 
     109 009E  BB 0000 R					mov bx, OFFSET 
					obsluga_zegara		; offset adresu
					 
     110 00A1  FA						cli	
									
									; zablo
					kowanie przerwañ 
     111								
									
									; zapis
					anie adresu procedury do wektora nr 8 
     112 00A2  89 1E 0020					mov ds:[32], bx
									
							; OFFSET 
     113 00A6  A3 0022						mov ds:[34], ax
									
							; cz. segmentowa 
     114 00A9  FB						sti	
									
									;odblok
					owanie przerwañ 
     115								
									
									; oczek
					iwanie na naciœniêcie klawisza 'x' 
     116 00AA				aktywne_oczekiwanie: 
     117 00AA  B4 01						mov ah, 1 
     118 00AC  CD 16						int 16H 
     119								
									
									; funkc
					ja INT 16H (AH=1) BIOSu ustawia ZF=1 je
					œli 
     120								
									
									; naciœ
					niêto jakiœ klawisz 
     121 00AE  74 FA						jz aktywne_ocze
					kiwanie 
     122				 
     123								
									
									; odczy
					tanie kodu ASCII naciœniêtego klawisza 
					(INT 16H, AH=0) 
     124								
									
Microsoft (R) Macro Assembler Version 5.00                  1/4/24 22:16:29
                                                             Page     1-6


									; do re
					jestru AL 
     125 00B0  B4 00						mov ah, 0 
     126 00B2  CD 16						int 16H 
     127 00B4  3C 78						cmp al, 'x'
									
								; porównanie z 
					kodem litery 'x' 
     128 00B6  75 F2						jne aktywne_ocz
					ekiwanie			
						; skok, gdy inny znak 
     129				 
     130				 
     131								
									
									; deins
					talacja procedury obs³ugi przerwania ze
					garowego 
     132								
									
									; odtwo
					rzenie oryginalnej zawartoœci wektora n
					r 8 
     133 00B8  2E: 66| A1 007B R				mov eax, cs:wek
					tor8 
     134 00BD  FA						cli 
     135 00BE  66| A3 0020					mov ds:[32], ea
					x				
						; przes³anie wartoœci oryginaln
					ej 
     136								
									
									; do we
					ktora 8 w tablicy wektorów 
     137								
									
									; przer
					wañ 
     138 00C2  FB						sti 
     139								
									
									; zakoñ
					czenie programu 
     140 00C3  B0 00						mov al, 0 
     141 00C5  B4 4C						mov ah, 4CH 
     142 00C7  CD 21						int 21H 
     143 00C9				rozkazy ENDS 
     144				 
     145 0000				nasz_stos SEGMENT stack 
     146 0000  0080[						db 128 dup (?) 
     147	    ??			
     148			 ]	
     149				
     150 0080				nasz_stos ENDS 
Microsoft (R) Macro Assembler Version 5.00                  1/4/24 22:16:29
                                                             Page     1-7


     151				 
     152				END zacznij 
Microsoft (R) Macro Assembler Version 5.00                  1/4/24 22:16:29
                                                             Symbols-1




                N a m e         	Size	Length	 Align	Combine Class

NASZ_STOS  . . . . . . . . . . .  	32 Bit	0080	PARA	STACK	
ROZKAZY  . . . . . . . . . . . .  	16 Bit	00C9	PARA	NONE	

Symbols:            

                N a m e         	Type	 Value	 Attr

AKTYWNE_OCZEKIWANIE  . . . . . .  	L NEAR	00AA	ROZKAZY

CZAS_OCZEKIWANIA . . . . . . . .  	L DWORD	007F	ROZKAZY

DAL  . . . . . . . . . . . . . .  	L NEAR	0052	ROZKAZY

KOLOR  . . . . . . . . . . . . .  	L BYTE	0083	ROZKAZY
KOLOR_CZER . . . . . . . . . . .  	L BYTE	0084	ROZKAZY
KOLOR_NIEB . . . . . . . . . . .  	L BYTE	0086	ROZKAZY
KOLOR_ZIEL . . . . . . . . . . .  	L BYTE	0085	ROZKAZY

LICZNIK  . . . . . . . . . . . .  	L WORD	0079	ROZKAZY

NIE_CZERW  . . . . . . . . . . .  	L NEAR	0032	ROZKAZY
NIE_ZIEL . . . . . . . . . . . .  	L NEAR	004A	ROZKAZY

OBSLUGA_ZEGARA . . . . . . . . .  	N PROC	0000	ROZKAZY	Length = 0087

RYSUJ  . . . . . . . . . . . . .  	L NEAR	0060	ROZKAZY

SKIP . . . . . . . . . . . . . .  	L NEAR	0071	ROZKAZY

WEKTOR8  . . . . . . . . . . . .  	L DWORD	007B	ROZKAZY

ZACZNIJ  . . . . . . . . . . . .  	L NEAR	0087	ROZKAZY

@FILENAME  . . . . . . . . . . .  	TEXT  rgb		


    148 Source  Lines
    148 Total   Lines
     19 Symbols

  50426 + 449734 Bytes symbol space free

      0 Warning Errors
      0 Severe  Errors

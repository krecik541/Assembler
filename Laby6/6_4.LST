Microsoft (R) Macro Assembler Version 5.00                  1/2/24 22:05:07
                                                             Page     1-1


       1				.386 
       2 0000				rozkazy SEGMENT use16 
       3						ASSUME  CS:rozkazy 
       4				 
       5				; podprogram 'wyswietl_AL' wyœwietla za
					wartoœæ rejestru AL 
       6				; w postaci liczby dziesiêtnej bez znak
					u 
       7 0000				wyswietl_AL PROC 
       8					; wyœwietlanie zawartoœci rejes
					tru AL na ekranie wg adresu 
       9					; podanego w ES:BX 
      10					; stosowany jest bezpoœredni za
					pis do pamiêci ekranu 
      11					; przechowanie rejestrów 
      12 0000  50				push ax 
      13 0001  51				push cx 
      14 0002  52				push dx 
      15					 
      16 0003  B1 0A				mov cl, 10 ; dzielnik 
      17				 
      18 0005  B4 00				mov ah, 0 ; zerowanie starszej 
					czêœci dzielnej 
      19					; dzielenie liczby w AX przez l
					iczbê w CL, iloraz w AL, 
      20					; reszta w AH (tu: dzielenie pr
					zez 10) 
      21 0007  F6 F1				div cl 
      22 0009  80 C4 30				add ah, 30H ; zamiana na kod AS
					CII 
      23 000C  26: 88 67 04			mov es:[bx+4], ah ; cyfra jedno
					œci 
      24					 
      25 0010  B4 00				mov ah, 0 
      26 0012  F6 F1				div cl ; drugie dzielenie przez
					 10 
      27 0014  80 C4 30				add ah, 30H ; zamiana na kod AS
					CII 
      28 0017  26: 88 67 02			mov es:[bx+2], ah ; cyfra dzies
					i¹tek 
      29					 
      30 001B  04 30				add al, 30H ; zamiana na kod AS
					CII 
      31 001D  26: 88 07			mov es:[bx+0], al ; cyfra setek
					 
      32					 
      33					; wpisanie kodu koloru (intensy
					wny bia³y) do pamiêci ekranu 
      34 0020  B0 0F				mov al, 00001111B 
      35 0022  26: 88 47 01			mov es:[bx+1],al 
      36 0026  26: 88 47 03			mov es:[bx+3],al 
      37 002A  26: 88 47 05			mov es:[bx+5],al 
      38					 
      39					; odtworzenie rejestrów 
Microsoft (R) Macro Assembler Version 5.00                  1/2/24 22:05:07
                                                             Page     1-2


      40 002E  5A				pop dx 
      41 002F  59				pop cx 
      42 0030  58				pop ax 
      43 0031  C3				ret ; wyjœcie z podprogramu 
      44 0032				wyswietl_AL ENDP 
      45				 
      46				 
      47 0032				obsluga_klawy PROC 
      48 0032  50				push	ax 
      49 0033  53				push	bx 
      50 0034  06				push	es 
      51				 
      52 0035  B8 B800				mov		ax, 0b800h ; ad
					res pamiêci ekranu (*16) 
      53 0038  8E C0				mov		es, ax 
      54				 
      55 003A  2E: 8B 1E 0060 R			mov		bx, cs:licznik 
      56				 
      57 003F  E4 60				in		al, 60h 
      58 0041  E8 0000 R			call	wyswietl_AL 
      59				 
      60					; add		bx, 8 
      61				 
      62 0044  81 FB 0FA0			cmp		bx, 4000 
      63 0048  0F 82 004F R			jb		wyswietl_dalej 
      64				 
      65 004C  BB 0000				mov		bx, 0 
      66				 
      67 004F				wyswietl_dalej: 
      68 004F  2E: 89 1E 0060 R			mov		cs:licznik, bx 
      69				 
      70 0054  07				pop		es 
      71 0055  5B				pop		bx 
      72 0056  58				pop		ax 
      73				 
      74 0057  2E: FF 2E 005C R			jmp		dword ptr cs:we
					ktor9 
      75				 
      76					; dane 
      77 005C  ????????				wektor9 dd	? 
      78 0060  0140				licznik	dw	320 
      79 0062				obsluga_klawy ENDP 
      80				 
      81				; =================================== 
      82				 
      83 0062				zacznij: 
      84 0062  B0 00				mov		al, 0 
      85 0064  B0 05				mov		al, 5 
      86 0066  CD 0A				int		10 
      87				 
      88 0068  B8 0000				mov		ax, 0 
      89 006B  8E D8				mov		ds, ax	
						; zerowanie rejestru DS 
      90				 
Microsoft (R) Macro Assembler Version 5.00                  1/2/24 22:05:07
                                                             Page     1-3


      91					; wektor9 = 9 * 4 + 0 
      92 006D  66| A1 0024			mov		eax, ds:[36] 
      93 0071  2E: 66| A3 005C R		mov		cs:wektor9, eax
					 
      94				 
      95					; wpisanie adresu procedury do 
					wektora nr 9 
      96 0076  B8 ---- R			mov		ax, SEG obsluga
					_klawy 
      97 0079  BB 0032 R			mov		bx, OFFSET obsl
					uga_klawy 
      98				 
      99 007C  FA				cli ; zablokowanie przerwañ 
     100				 
     101					; zapisanie adresu procedury do
					 wektora nr 9 
     102 007D  89 1E 0024			mov		ds:[36], bx 
     103 0081  A3 0026				mov		ds:[38], ax 
     104				 
     105 0084  FB				sti ; odblokowanie przerwañ 
     106				 
     107				 
     108					; main loop do esc 
     109 0085				oczekiwanie: 
     110 0085  B4 01				mov		ah, 1 
     111 0087  CD 16				int		16h 
     112 0089  74 FA				jz		oczekiwanie 
     113					 
     114					; odczytwywanie numeru klawisza
					 wciœniêtegogo klawisza 
     115 008B  B4 00				mov		ah, 0 
     116 008D  CD 16				int		16h 
     117 008F  80 FC 01				cmp		ah, 1 
     118 0092  75 F1				jne		oczekiwanie 
     119				 
     120					; deinstalacja procedury obs³ug
					i przerwnia  
     121 0094  2E: 66| A1 005C R		mov		eax, cs:wektor9
					 
     122 0099  FA				cli 
     123 009A  66| A3 0024			mov		ds:[36], eax ; 
					przes³anie oryginalenej wartoœci do wek
					tora 9 w tablicy przerwañ 
     124					 
     125 009E  FB				sti 
     126				 
     127					; zakoñczenie programu 
     128 009F  B0 00				mov		al, 0 
     129 00A1  B4 4C				mov		ah, 4ch 
     130 00A3  CD 21				int		21h 
     131 00A5				rozkazy ENDS 
     132				 
     133 0000				nasz_stos SEGMENT stack 
     134 0000  0080[				db	128 dup (?) 
Microsoft (R) Macro Assembler Version 5.00                  1/2/24 22:05:07
                                                             Page     1-4


     135	    ??			
     136			 ]	
     137				
     138 0080				nasz_stos ENDS 
     139				 
     140				END zacznij 
Microsoft (R) Macro Assembler Version 5.00                  1/2/24 22:05:07
                                                             Symbols-1




                N a m e         	Size	Length	 Align	Combine Class

NASZ_STOS  . . . . . . . . . . .  	32 Bit	0080	PARA	STACK	
ROZKAZY  . . . . . . . . . . . .  	16 Bit	00A5	PARA	NONE	

Symbols:            

                N a m e         	Type	 Value	 Attr

LICZNIK  . . . . . . . . . . . .  	L WORD	0060	ROZKAZY

OBSLUGA_KLAWY  . . . . . . . . .  	N PROC	0032	ROZKAZY	Length = 0030
OCZEKIWANIE  . . . . . . . . . .  	L NEAR	0085	ROZKAZY

WEKTOR9  . . . . . . . . . . . .  	L DWORD	005C	ROZKAZY
WYSWIETL_AL  . . . . . . . . . .  	N PROC	0000	ROZKAZY	Length = 0032
WYSWIETL_DALEJ . . . . . . . . .  	L NEAR	004F	ROZKAZY

ZACZNIJ  . . . . . . . . . . . .  	L NEAR	0062	ROZKAZY

@FILENAME  . . . . . . . . . . .  	TEXT  6_4		


    137 Source  Lines
    137 Total   Lines
     11 Symbols

  50502 + 466042 Bytes symbol space free

      0 Warning Errors
      0 Severe  Errors
